services:
  db:
    image: postgres:15-alpine
    container_name: desafio-autopecas-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: desafio-autopecas-redis


  web:
    build: .
    container_name: desafio-autopecas-web
    env_file:
      - .env
    command: >
      sh -c "sleep 10 && python manage.py makemigrations && python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: .
    container_name: desafio-autopecas-celery
    command: celery -A config.celery worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      web:
        condition: service_started

  celery-beat:
    build: .
    container_name: desafio-autopecas-celery-beat
    env_file:
      - .env
    command: >
      sh -c "sleep 30 && celery -A config.celery beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      web:
        condition: service_started

  flower:
    build: .
    container_name: desafio-autopecas-flower
    command: celery -A config.celery flower --address=0.0.0.0 --port=5555
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      web:
        condition: service_started

volumes:
  postgres_data: